#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp8.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShopBanDoTheThaoNorthwind")]
	public partial class ShopBanDoTheThaoNorthwindDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertZipCode(ZipCode instance);
    partial void UpdateZipCode(ZipCode instance);
    partial void DeleteZipCode(ZipCode instance);
    partial void InsertDetailImport(DetailImport instance);
    partial void UpdateDetailImport(DetailImport instance);
    partial void DeleteDetailImport(DetailImport instance);
    partial void InsertImportBill(ImportBill instance);
    partial void UpdateImportBill(ImportBill instance);
    partial void DeleteImportBill(ImportBill instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertMemType(MemType instance);
    partial void UpdateMemType(MemType instance);
    partial void DeleteMemType(MemType instance);
    partial void InsertProducer(Producer instance);
    partial void UpdateProducer(Producer instance);
    partial void DeleteProducer(Producer instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    partial void InsertShipper(Shipper instance);
    partial void UpdateShipper(Shipper instance);
    partial void DeleteShipper(Shipper instance);
    partial void InsertStatusOrder(StatusOrder instance);
    partial void UpdateStatusOrder(StatusOrder instance);
    partial void DeleteStatusOrder(StatusOrder instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertWareHouse(WareHouse instance);
    partial void UpdateWareHouse(WareHouse instance);
    partial void DeleteWareHouse(WareHouse instance);
    partial void InsertDetailOrder(DetailOrder instance);
    partial void UpdateDetailOrder(DetailOrder instance);
    partial void DeleteDetailOrder(DetailOrder instance);
    partial void InsertColorProduct(ColorProduct instance);
    partial void UpdateColorProduct(ColorProduct instance);
    partial void DeleteColorProduct(ColorProduct instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public ShopBanDoTheThaoNorthwindDataContext() : 
				base(global::ConsoleApp8.Properties.Settings.Default.ShopBanDoTheThaoNorthwindConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanDoTheThaoNorthwindDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanDoTheThaoNorthwindDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanDoTheThaoNorthwindDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanDoTheThaoNorthwindDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<ZipCode> ZipCodes
		{
			get
			{
				return this.GetTable<ZipCode>();
			}
		}
		
		public System.Data.Linq.Table<DetailImport> DetailImports
		{
			get
			{
				return this.GetTable<DetailImport>();
			}
		}
		
		public System.Data.Linq.Table<ImportBill> ImportBills
		{
			get
			{
				return this.GetTable<ImportBill>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<MemType> MemTypes
		{
			get
			{
				return this.GetTable<MemType>();
			}
		}
		
		public System.Data.Linq.Table<Producer> Producers
		{
			get
			{
				return this.GetTable<Producer>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
		
		public System.Data.Linq.Table<Shipper> Shippers
		{
			get
			{
				return this.GetTable<Shipper>();
			}
		}
		
		public System.Data.Linq.Table<StatusOrder> StatusOrders
		{
			get
			{
				return this.GetTable<StatusOrder>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<WareHouse> WareHouses
		{
			get
			{
				return this.GetTable<WareHouse>();
			}
		}
		
		public System.Data.Linq.Table<DetailOrder> DetailOrders
		{
			get
			{
				return this.GetTable<DetailOrder>();
			}
		}
		
		public System.Data.Linq.Table<ColorProduct> ColorProducts
		{
			get
			{
				return this.GetTable<ColorProduct>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDComment;
		
		private int _IDMember;
		
		private string _FullName;
		
		private int _IDProduct;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCommentChanging(int value);
    partial void OnIDCommentChanged();
    partial void OnIDMemberChanging(int value);
    partial void OnIDMemberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Comment()
		{
			this._Member = default(EntityRef<Member>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDComment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDComment
		{
			get
			{
				return this._IDComment;
			}
			set
			{
				if ((this._IDComment != value))
				{
					this.OnIDCommentChanging(value);
					this.SendPropertyChanging();
					this._IDComment = value;
					this.SendPropertyChanged("IDComment");
					this.OnIDCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMember", DbType="Int NOT NULL")]
		public int IDMember
		{
			get
			{
				return this._IDMember;
			}
			set
			{
				if ((this._IDMember != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMemberChanging(value);
					this.SendPropertyChanging();
					this._IDMember = value;
					this.SendPropertyChanged("IDMember");
					this.OnIDMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
		public int IDProduct
		{
			get
			{
				return this._IDProduct;
			}
			set
			{
				if ((this._IDProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductChanging(value);
					this.SendPropertyChanging();
					this._IDProduct = value;
					this.SendPropertyChanged("IDProduct");
					this.OnIDProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Comment", Storage="_Member", ThisKey="IDMember", OtherKey="IDMember", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._IDMember = value.IDMember;
					}
					else
					{
						this._IDMember = default(int);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Product", ThisKey="IDProduct", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._IDProduct = value.ProductID;
					}
					else
					{
						this._IDProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZipCode")]
	public partial class ZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDZipCode;
		
		private string _Province_City;
		
		private string _Wards;
		
		private string _District;
		
		private EntitySet<Store> _Stores;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDZipCodeChanging(int value);
    partial void OnIDZipCodeChanged();
    partial void OnProvince_CityChanging(string value);
    partial void OnProvince_CityChanged();
    partial void OnWardsChanging(string value);
    partial void OnWardsChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    #endregion
		
		public ZipCode()
		{
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDZipCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDZipCode
		{
			get
			{
				return this._IDZipCode;
			}
			set
			{
				if ((this._IDZipCode != value))
				{
					this.OnIDZipCodeChanging(value);
					this.SendPropertyChanging();
					this._IDZipCode = value;
					this.SendPropertyChanged("IDZipCode");
					this.OnIDZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Province/City]", Storage="_Province_City", DbType="NVarChar(50)")]
		public string Province_City
		{
			get
			{
				return this._Province_City;
			}
			set
			{
				if ((this._Province_City != value))
				{
					this.OnProvince_CityChanging(value);
					this.SendPropertyChanging();
					this._Province_City = value;
					this.SendPropertyChanged("Province_City");
					this.OnProvince_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wards", DbType="NVarChar(50)")]
		public string Wards
		{
			get
			{
				return this._Wards;
			}
			set
			{
				if ((this._Wards != value))
				{
					this.OnWardsChanging(value);
					this.SendPropertyChanging();
					this._Wards = value;
					this.SendPropertyChanged("Wards");
					this.OnWardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(50)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Store", Storage="_Stores", ThisKey="IDZipCode", OtherKey="IDZipCodeStore")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Order", Storage="_Orders", ThisKey="IDZipCode", OtherKey="IDZipCode")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.ZipCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailImport")]
	public partial class DetailImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDetailImport;
		
		private System.Nullable<int> _IDImport;
		
		private System.Nullable<int> _IDProduct;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _Amount;
		
		private EntityRef<ImportBill> _ImportBill;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDetailImportChanging(int value);
    partial void OnIDDetailImportChanged();
    partial void OnIDImportChanging(System.Nullable<int> value);
    partial void OnIDImportChanged();
    partial void OnIDProductChanging(System.Nullable<int> value);
    partial void OnIDProductChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public DetailImport()
		{
			this._ImportBill = default(EntityRef<ImportBill>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDetailImport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDetailImport
		{
			get
			{
				return this._IDDetailImport;
			}
			set
			{
				if ((this._IDDetailImport != value))
				{
					this.OnIDDetailImportChanging(value);
					this.SendPropertyChanging();
					this._IDDetailImport = value;
					this.SendPropertyChanged("IDDetailImport");
					this.OnIDDetailImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDImport", DbType="Int")]
		public System.Nullable<int> IDImport
		{
			get
			{
				return this._IDImport;
			}
			set
			{
				if ((this._IDImport != value))
				{
					if (this._ImportBill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDImportChanging(value);
					this.SendPropertyChanging();
					this._IDImport = value;
					this.SendPropertyChanged("IDImport");
					this.OnIDImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
		public System.Nullable<int> IDProduct
		{
			get
			{
				return this._IDProduct;
			}
			set
			{
				if ((this._IDProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductChanging(value);
					this.SendPropertyChanging();
					this._IDProduct = value;
					this.SendPropertyChanged("IDProduct");
					this.OnIDProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportBill_DetailImport", Storage="_ImportBill", ThisKey="IDImport", OtherKey="IDImport", IsForeignKey=true)]
		public ImportBill ImportBill
		{
			get
			{
				return this._ImportBill.Entity;
			}
			set
			{
				ImportBill previousValue = this._ImportBill.Entity;
				if (((previousValue != value) 
							|| (this._ImportBill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ImportBill.Entity = null;
						previousValue.DetailImports.Remove(this);
					}
					this._ImportBill.Entity = value;
					if ((value != null))
					{
						value.DetailImports.Add(this);
						this._IDImport = value.IDImport;
					}
					else
					{
						this._IDImport = default(Nullable<int>);
					}
					this.SendPropertyChanged("ImportBill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailImport", Storage="_Product", ThisKey="IDProduct", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DetailImports.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DetailImports.Add(this);
						this._IDProduct = value.ProductID;
					}
					else
					{
						this._IDProduct = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportBill")]
	public partial class ImportBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDImport;
		
		private System.Nullable<decimal> _TotalMoney;
		
		private System.Nullable<int> _TotalAmount;
		
		private System.Nullable<int> _IDSupplier;
		
		private System.Nullable<System.DateTime> _DateImport;
		
		private EntitySet<DetailImport> _DetailImports;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDImportChanging(int value);
    partial void OnIDImportChanged();
    partial void OnTotalMoneyChanging(System.Nullable<decimal> value);
    partial void OnTotalMoneyChanged();
    partial void OnTotalAmountChanging(System.Nullable<int> value);
    partial void OnTotalAmountChanged();
    partial void OnIDSupplierChanging(System.Nullable<int> value);
    partial void OnIDSupplierChanged();
    partial void OnDateImportChanging(System.Nullable<System.DateTime> value);
    partial void OnDateImportChanged();
    #endregion
		
		public ImportBill()
		{
			this._DetailImports = new EntitySet<DetailImport>(new Action<DetailImport>(this.attach_DetailImports), new Action<DetailImport>(this.detach_DetailImports));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDImport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDImport
		{
			get
			{
				return this._IDImport;
			}
			set
			{
				if ((this._IDImport != value))
				{
					this.OnIDImportChanging(value);
					this.SendPropertyChanging();
					this._IDImport = value;
					this.SendPropertyChanged("IDImport");
					this.OnIDImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMoney", DbType="Money")]
		public System.Nullable<decimal> TotalMoney
		{
			get
			{
				return this._TotalMoney;
			}
			set
			{
				if ((this._TotalMoney != value))
				{
					this.OnTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._TotalMoney = value;
					this.SendPropertyChanged("TotalMoney");
					this.OnTotalMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Int")]
		public System.Nullable<int> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSupplier", DbType="Int")]
		public System.Nullable<int> IDSupplier
		{
			get
			{
				return this._IDSupplier;
			}
			set
			{
				if ((this._IDSupplier != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSupplierChanging(value);
					this.SendPropertyChanging();
					this._IDSupplier = value;
					this.SendPropertyChanged("IDSupplier");
					this.OnIDSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateImport", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateImport
		{
			get
			{
				return this._DateImport;
			}
			set
			{
				if ((this._DateImport != value))
				{
					this.OnDateImportChanging(value);
					this.SendPropertyChanging();
					this._DateImport = value;
					this.SendPropertyChanged("DateImport");
					this.OnDateImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportBill_DetailImport", Storage="_DetailImports", ThisKey="IDImport", OtherKey="IDImport")]
		public EntitySet<DetailImport> DetailImports
		{
			get
			{
				return this._DetailImports;
			}
			set
			{
				this._DetailImports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ImportBill", Storage="_Supplier", ThisKey="IDSupplier", OtherKey="IDSupplier", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ImportBills.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ImportBills.Add(this);
						this._IDSupplier = value.IDSupplier;
					}
					else
					{
						this._IDSupplier = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailImports(DetailImport entity)
		{
			this.SendPropertyChanging();
			entity.ImportBill = this;
		}
		
		private void detach_DetailImports(DetailImport entity)
		{
			this.SendPropertyChanging();
			entity.ImportBill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMember;
		
		private string _UserName;
		
		private string _PassWord;
		
		private string _FullName;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Avatar;
		
		private System.Nullable<int> _IDMemType;
		
		private string _IDCard;
		
		private System.Nullable<decimal> _Salary;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<bool> _Gender;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Review> _Reviews;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<MemType> _MemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMemberChanging(int value);
    partial void OnIDMemberChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnIDMemTypeChanging(System.Nullable<int> value);
    partial void OnIDMemTypeChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    #endregion
		
		public Member()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._MemType = default(EntityRef<MemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMember", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMember
		{
			get
			{
				return this._IDMember;
			}
			set
			{
				if ((this._IDMember != value))
				{
					this.OnIDMemberChanging(value);
					this.SendPropertyChanging();
					this._IDMember = value;
					this.SendPropertyChanged("IDMember");
					this.OnIDMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(100)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(50)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMemType", DbType="Int")]
		public System.Nullable<int> IDMemType
		{
			get
			{
				return this._IDMemType;
			}
			set
			{
				if ((this._IDMemType != value))
				{
					if (this._MemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMemTypeChanging(value);
					this.SendPropertyChanging();
					this._IDMemType = value;
					this.SendPropertyChanged("IDMemType");
					this.OnIDMemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="NVarChar(10)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Money")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Comment", Storage="_Comments", ThisKey="IDMember", OtherKey="IDMember")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Review", Storage="_Reviews", ThisKey="IDMember", OtherKey="IDMember")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Order", Storage="_Orders", ThisKey="IDMember", OtherKey="IDMember")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemType_Member", Storage="_MemType", ThisKey="IDMemType", OtherKey="IDMemType", IsForeignKey=true)]
		public MemType MemType
		{
			get
			{
				return this._MemType.Entity;
			}
			set
			{
				MemType previousValue = this._MemType.Entity;
				if (((previousValue != value) 
							|| (this._MemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemType.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._MemType.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._IDMemType = value.IDMemType;
					}
					else
					{
						this._IDMemType = default(Nullable<int>);
					}
					this.SendPropertyChanged("MemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemType")]
	public partial class MemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMemType;
		
		private string _NameMemType;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMemTypeChanging(int value);
    partial void OnIDMemTypeChanged();
    partial void OnNameMemTypeChanging(string value);
    partial void OnNameMemTypeChanged();
    #endregion
		
		public MemType()
		{
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMemType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMemType
		{
			get
			{
				return this._IDMemType;
			}
			set
			{
				if ((this._IDMemType != value))
				{
					this.OnIDMemTypeChanging(value);
					this.SendPropertyChanging();
					this._IDMemType = value;
					this.SendPropertyChanged("IDMemType");
					this.OnIDMemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMemType", DbType="NVarChar(50)")]
		public string NameMemType
		{
			get
			{
				return this._NameMemType;
			}
			set
			{
				if ((this._NameMemType != value))
				{
					this.OnNameMemTypeChanging(value);
					this.SendPropertyChanging();
					this._NameMemType = value;
					this.SendPropertyChanged("NameMemType");
					this.OnNameMemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemType_Member", Storage="_Members", ThisKey="IDMemType", OtherKey="IDMemType")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.MemType = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.MemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producer")]
	public partial class Producer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProducerID;
		
		private string _ProducerName;
		
		private string _Information;
		
		private string _Logo;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProducerIDChanging(int value);
    partial void OnProducerIDChanged();
    partial void OnProducerNameChanging(string value);
    partial void OnProducerNameChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public Producer()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProducerID
		{
			get
			{
				return this._ProducerID;
			}
			set
			{
				if ((this._ProducerID != value))
				{
					this.OnProducerIDChanging(value);
					this.SendPropertyChanging();
					this._ProducerID = value;
					this.SendPropertyChanged("ProducerID");
					this.OnProducerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerName", DbType="NVarChar(100)")]
		public string ProducerName
		{
			get
			{
				return this._ProducerName;
			}
			set
			{
				if ((this._ProducerName != value))
				{
					this.OnProducerNameChanging(value);
					this.SendPropertyChanging();
					this._ProducerName = value;
					this.SendPropertyChanged("ProducerName");
					this.OnProducerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="NVarChar(500)")]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(MAX)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Products", ThisKey="ProducerID", OtherKey="ProducerID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Producer = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Producer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ProductName;
		
		private System.Nullable<decimal> _Price;
		
		private string _YearManufacture;
		
		private string _Introduce;
		
		private string _Description;
		
		private string _Image0;
		
		private string _Image1;
		
		private string _Image2;
		
		private string _Image3;
		
		private System.Nullable<int> _SalesedQuantity;
		
		private System.Nullable<bool> _New;
		
		private System.Nullable<System.DateTime> _DateUpdate;
		
		private System.Nullable<int> _ProducerID;
		
		private System.Nullable<int> _ProductTypeID;
		
		private System.Nullable<int> _WareHouseID;
		
		private System.Nullable<bool> _Discontinued;
		
		private System.Nullable<int> _RemainingQuantity;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<DetailImport> _DetailImports;
		
		private EntitySet<Review> _Reviews;
		
		private EntitySet<DetailOrder> _DetailOrders;
		
		private EntityRef<Producer> _Producer;
		
		private EntityRef<ProductType> _ProductType;
		
		private EntityRef<WareHouse> _WareHouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnYearManufactureChanging(string value);
    partial void OnYearManufactureChanged();
    partial void OnIntroduceChanging(string value);
    partial void OnIntroduceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImage0Changing(string value);
    partial void OnImage0Changed();
    partial void OnImage1Changing(string value);
    partial void OnImage1Changed();
    partial void OnImage2Changing(string value);
    partial void OnImage2Changed();
    partial void OnImage3Changing(string value);
    partial void OnImage3Changed();
    partial void OnSalesedQuantityChanging(System.Nullable<int> value);
    partial void OnSalesedQuantityChanged();
    partial void OnNewChanging(System.Nullable<bool> value);
    partial void OnNewChanged();
    partial void OnDateUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdateChanged();
    partial void OnProducerIDChanging(System.Nullable<int> value);
    partial void OnProducerIDChanged();
    partial void OnProductTypeIDChanging(System.Nullable<int> value);
    partial void OnProductTypeIDChanged();
    partial void OnWareHouseIDChanging(System.Nullable<int> value);
    partial void OnWareHouseIDChanged();
    partial void OnDiscontinuedChanging(System.Nullable<bool> value);
    partial void OnDiscontinuedChanged();
    partial void OnRemainingQuantityChanging(System.Nullable<int> value);
    partial void OnRemainingQuantityChanged();
    #endregion
		
		public Product()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._DetailImports = new EntitySet<DetailImport>(new Action<DetailImport>(this.attach_DetailImports), new Action<DetailImport>(this.detach_DetailImports));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._DetailOrders = new EntitySet<DetailOrder>(new Action<DetailOrder>(this.attach_DetailOrders), new Action<DetailOrder>(this.detach_DetailOrders));
			this._Producer = default(EntityRef<Producer>);
			this._ProductType = default(EntityRef<ProductType>);
			this._WareHouse = default(EntityRef<WareHouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(255)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearManufacture", DbType="Char(4)")]
		public string YearManufacture
		{
			get
			{
				return this._YearManufacture;
			}
			set
			{
				if ((this._YearManufacture != value))
				{
					this.OnYearManufactureChanging(value);
					this.SendPropertyChanging();
					this._YearManufacture = value;
					this.SendPropertyChanged("YearManufacture");
					this.OnYearManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduce", DbType="NVarChar(MAX)")]
		public string Introduce
		{
			get
			{
				return this._Introduce;
			}
			set
			{
				if ((this._Introduce != value))
				{
					this.OnIntroduceChanging(value);
					this.SendPropertyChanging();
					this._Introduce = value;
					this.SendPropertyChanged("Introduce");
					this.OnIntroduceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image0", DbType="NVarChar(MAX)")]
		public string Image0
		{
			get
			{
				return this._Image0;
			}
			set
			{
				if ((this._Image0 != value))
				{
					this.OnImage0Changing(value);
					this.SendPropertyChanging();
					this._Image0 = value;
					this.SendPropertyChanged("Image0");
					this.OnImage0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1", DbType="NVarChar(MAX)")]
		public string Image1
		{
			get
			{
				return this._Image1;
			}
			set
			{
				if ((this._Image1 != value))
				{
					this.OnImage1Changing(value);
					this.SendPropertyChanging();
					this._Image1 = value;
					this.SendPropertyChanged("Image1");
					this.OnImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2", DbType="NVarChar(MAX)")]
		public string Image2
		{
			get
			{
				return this._Image2;
			}
			set
			{
				if ((this._Image2 != value))
				{
					this.OnImage2Changing(value);
					this.SendPropertyChanging();
					this._Image2 = value;
					this.SendPropertyChanged("Image2");
					this.OnImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image3", DbType="NVarChar(MAX)")]
		public string Image3
		{
			get
			{
				return this._Image3;
			}
			set
			{
				if ((this._Image3 != value))
				{
					this.OnImage3Changing(value);
					this.SendPropertyChanging();
					this._Image3 = value;
					this.SendPropertyChanged("Image3");
					this.OnImage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesedQuantity", DbType="Int")]
		public System.Nullable<int> SalesedQuantity
		{
			get
			{
				return this._SalesedQuantity;
			}
			set
			{
				if ((this._SalesedQuantity != value))
				{
					this.OnSalesedQuantityChanging(value);
					this.SendPropertyChanging();
					this._SalesedQuantity = value;
					this.SendPropertyChanged("SalesedQuantity");
					this.OnSalesedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="Bit")]
		public System.Nullable<bool> New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this.OnNewChanging(value);
					this.SendPropertyChanging();
					this._New = value;
					this.SendPropertyChanged("New");
					this.OnNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="Date")]
		public System.Nullable<System.DateTime> DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerID", DbType="Int")]
		public System.Nullable<int> ProducerID
		{
			get
			{
				return this._ProducerID;
			}
			set
			{
				if ((this._ProducerID != value))
				{
					if (this._Producer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducerIDChanging(value);
					this.SendPropertyChanging();
					this._ProducerID = value;
					this.SendPropertyChanged("ProducerID");
					this.OnProducerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", DbType="Int")]
		public System.Nullable<int> ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WareHouseID", DbType="Int")]
		public System.Nullable<int> WareHouseID
		{
			get
			{
				return this._WareHouseID;
			}
			set
			{
				if ((this._WareHouseID != value))
				{
					if (this._WareHouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWareHouseIDChanging(value);
					this.SendPropertyChanging();
					this._WareHouseID = value;
					this.SendPropertyChanged("WareHouseID");
					this.OnWareHouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discontinued", DbType="Bit")]
		public System.Nullable<bool> Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this.OnDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._Discontinued = value;
					this.SendPropertyChanged("Discontinued");
					this.OnDiscontinuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQuantity", DbType="Int")]
		public System.Nullable<int> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this.OnRemainingQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingQuantity = value;
					this.SendPropertyChanged("RemainingQuantity");
					this.OnRemainingQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Comments", ThisKey="ProductID", OtherKey="IDProduct")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailImport", Storage="_DetailImports", ThisKey="ProductID", OtherKey="IDProduct")]
		public EntitySet<DetailImport> DetailImports
		{
			get
			{
				return this._DetailImports;
			}
			set
			{
				this._DetailImports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Reviews", ThisKey="ProductID", OtherKey="IDProduct")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailOrder", Storage="_DetailOrders", ThisKey="ProductID", OtherKey="IDProduct")]
		public EntitySet<DetailOrder> DetailOrders
		{
			get
			{
				return this._DetailOrders;
			}
			set
			{
				this._DetailOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Producer", ThisKey="ProducerID", OtherKey="ProducerID", IsForeignKey=true)]
		public Producer Producer
		{
			get
			{
				return this._Producer.Entity;
			}
			set
			{
				Producer previousValue = this._Producer.Entity;
				if (((previousValue != value) 
							|| (this._Producer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producer.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Producer.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProducerID = value.ProducerID;
					}
					else
					{
						this._ProducerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="ProductTypeID", OtherKey="ProductTypeID", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductTypeID = value.ProductTypeID;
					}
					else
					{
						this._ProductTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WareHouse_Product", Storage="_WareHouse", ThisKey="WareHouseID", OtherKey="IDWareHouse", IsForeignKey=true)]
		public WareHouse WareHouse
		{
			get
			{
				return this._WareHouse.Entity;
			}
			set
			{
				WareHouse previousValue = this._WareHouse.Entity;
				if (((previousValue != value) 
							|| (this._WareHouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WareHouse.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._WareHouse.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._WareHouseID = value.IDWareHouse;
					}
					else
					{
						this._WareHouseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WareHouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DetailImports(DetailImport entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DetailImports(DetailImport entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeID;
		
		private string _ProductTypeName;
		
		private string _Icon;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIDChanging(int value);
    partial void OnProductTypeIDChanged();
    partial void OnProductTypeNameChanging(string value);
    partial void OnProductTypeNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeName", DbType="NVarChar(100)")]
		public string ProductTypeName
		{
			get
			{
				return this._ProductTypeName;
			}
			set
			{
				if ((this._ProductTypeName != value))
				{
					this.OnProductTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeName = value;
					this.SendPropertyChanged("ProductTypeName");
					this.OnProductTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(MAX)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="ProductTypeID", OtherKey="ProductTypeID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Review")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDReview;
		
		private int _IDMember;
		
		private string _FullName;
		
		private int _IDProduct;
		
		private int _Star;
		
		private string _Image;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _Date;
		
		private int _IDOrder;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDReviewChanging(int value);
    partial void OnIDReviewChanged();
    partial void OnIDMemberChanging(int value);
    partial void OnIDMemberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnStarChanging(int value);
    partial void OnStarChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnIDOrderChanging(int value);
    partial void OnIDOrderChanged();
    #endregion
		
		public Review()
		{
			this._Member = default(EntityRef<Member>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReview", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDReview
		{
			get
			{
				return this._IDReview;
			}
			set
			{
				if ((this._IDReview != value))
				{
					this.OnIDReviewChanging(value);
					this.SendPropertyChanging();
					this._IDReview = value;
					this.SendPropertyChanged("IDReview");
					this.OnIDReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMember", DbType="Int NOT NULL")]
		public int IDMember
		{
			get
			{
				return this._IDMember;
			}
			set
			{
				if ((this._IDMember != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMemberChanging(value);
					this.SendPropertyChanging();
					this._IDMember = value;
					this.SendPropertyChanged("IDMember");
					this.OnIDMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
		public int IDProduct
		{
			get
			{
				return this._IDProduct;
			}
			set
			{
				if ((this._IDProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductChanging(value);
					this.SendPropertyChanging();
					this._IDProduct = value;
					this.SendPropertyChanged("IDProduct");
					this.OnIDProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Star", DbType="Int NOT NULL")]
		public int Star
		{
			get
			{
				return this._Star;
			}
			set
			{
				if ((this._Star != value))
				{
					this.OnStarChanging(value);
					this.SendPropertyChanging();
					this._Star = value;
					this.SendPropertyChanged("Star");
					this.OnStarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", DbType="Int NOT NULL")]
		public int IDOrder
		{
			get
			{
				return this._IDOrder;
			}
			set
			{
				if ((this._IDOrder != value))
				{
					this.OnIDOrderChanging(value);
					this.SendPropertyChanging();
					this._IDOrder = value;
					this.SendPropertyChanged("IDOrder");
					this.OnIDOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Review", Storage="_Member", ThisKey="IDMember", OtherKey="IDMember", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._IDMember = value.IDMember;
					}
					else
					{
						this._IDMember = default(int);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Product", ThisKey="IDProduct", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._IDProduct = value.ProductID;
					}
					else
					{
						this._IDProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shipper")]
	public partial class Shipper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDShipper;
		
		private string _NameShipper;
		
		private string _PhoneNumber;
		
		private string _Address;
		
		private string _Infomation;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDShipperChanging(int value);
    partial void OnIDShipperChanged();
    partial void OnNameShipperChanging(string value);
    partial void OnNameShipperChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnInfomationChanging(string value);
    partial void OnInfomationChanged();
    #endregion
		
		public Shipper()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShipper", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDShipper
		{
			get
			{
				return this._IDShipper;
			}
			set
			{
				if ((this._IDShipper != value))
				{
					this.OnIDShipperChanging(value);
					this.SendPropertyChanging();
					this._IDShipper = value;
					this.SendPropertyChanged("IDShipper");
					this.OnIDShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameShipper", DbType="NVarChar(100)")]
		public string NameShipper
		{
			get
			{
				return this._NameShipper;
			}
			set
			{
				if ((this._NameShipper != value))
				{
					this.OnNameShipperChanging(value);
					this.SendPropertyChanging();
					this._NameShipper = value;
					this.SendPropertyChanged("NameShipper");
					this.OnNameShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Infomation", DbType="NVarChar(200)")]
		public string Infomation
		{
			get
			{
				return this._Infomation;
			}
			set
			{
				if ((this._Infomation != value))
				{
					this.OnInfomationChanging(value);
					this.SendPropertyChanging();
					this._Infomation = value;
					this.SendPropertyChanged("Infomation");
					this.OnInfomationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipper_Order", Storage="_Orders", ThisKey="IDShipper", OtherKey="IDShipper")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shipper = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shipper = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusOrder")]
	public partial class StatusOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StatusOrder()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusOrder_Order", Storage="_Orders", ThisKey="ID", OtherKey="Status")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.StatusOrder = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.StatusOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSupplier;
		
		private string _NameSupplier;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Fax;
		
		private EntitySet<ImportBill> _ImportBills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSupplierChanging(int value);
    partial void OnIDSupplierChanged();
    partial void OnNameSupplierChanging(string value);
    partial void OnNameSupplierChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
		
		public Supplier()
		{
			this._ImportBills = new EntitySet<ImportBill>(new Action<ImportBill>(this.attach_ImportBills), new Action<ImportBill>(this.detach_ImportBills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSupplier", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSupplier
		{
			get
			{
				return this._IDSupplier;
			}
			set
			{
				if ((this._IDSupplier != value))
				{
					this.OnIDSupplierChanging(value);
					this.SendPropertyChanging();
					this._IDSupplier = value;
					this.SendPropertyChanged("IDSupplier");
					this.OnIDSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSupplier", DbType="NVarChar(100)")]
		public string NameSupplier
		{
			get
			{
				return this._NameSupplier;
			}
			set
			{
				if ((this._NameSupplier != value))
				{
					this.OnNameSupplierChanging(value);
					this.SendPropertyChanging();
					this._NameSupplier = value;
					this.SendPropertyChanged("NameSupplier");
					this.OnNameSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ImportBill", Storage="_ImportBills", ThisKey="IDSupplier", OtherKey="IDSupplier")]
		public EntitySet<ImportBill> ImportBills
		{
			get
			{
				return this._ImportBills;
			}
			set
			{
				this._ImportBills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImportBills(ImportBill entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ImportBills(ImportBill entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WareHouse")]
	public partial class WareHouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDWareHouse;
		
		private string _Address;
		
		private System.Nullable<int> _Amount;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDWareHouseChanging(int value);
    partial void OnIDWareHouseChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public WareHouse()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDWareHouse", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDWareHouse
		{
			get
			{
				return this._IDWareHouse;
			}
			set
			{
				if ((this._IDWareHouse != value))
				{
					this.OnIDWareHouseChanging(value);
					this.SendPropertyChanging();
					this._IDWareHouse = value;
					this.SendPropertyChanged("IDWareHouse");
					this.OnIDWareHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WareHouse_Product", Storage="_Products", ThisKey="IDWareHouse", OtherKey="WareHouseID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.WareHouse = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.WareHouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailOrder")]
	public partial class DetailOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDOrderDetail;
		
		private System.Nullable<int> _IDOrder;
		
		private System.Nullable<int> _IDProduct;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _IDColor;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ColorProduct> _ColorProduct;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOrderDetailChanging(int value);
    partial void OnIDOrderDetailChanged();
    partial void OnIDOrderChanging(System.Nullable<int> value);
    partial void OnIDOrderChanged();
    partial void OnIDProductChanging(System.Nullable<int> value);
    partial void OnIDProductChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIDColorChanging(System.Nullable<int> value);
    partial void OnIDColorChanged();
    #endregion
		
		public DetailOrder()
		{
			this._Product = default(EntityRef<Product>);
			this._ColorProduct = default(EntityRef<ColorProduct>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrderDetail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDOrderDetail
		{
			get
			{
				return this._IDOrderDetail;
			}
			set
			{
				if ((this._IDOrderDetail != value))
				{
					this.OnIDOrderDetailChanging(value);
					this.SendPropertyChanging();
					this._IDOrderDetail = value;
					this.SendPropertyChanged("IDOrderDetail");
					this.OnIDOrderDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", DbType="Int")]
		public System.Nullable<int> IDOrder
		{
			get
			{
				return this._IDOrder;
			}
			set
			{
				if ((this._IDOrder != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDOrderChanging(value);
					this.SendPropertyChanging();
					this._IDOrder = value;
					this.SendPropertyChanged("IDOrder");
					this.OnIDOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
		public System.Nullable<int> IDProduct
		{
			get
			{
				return this._IDProduct;
			}
			set
			{
				if ((this._IDProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductChanging(value);
					this.SendPropertyChanging();
					this._IDProduct = value;
					this.SendPropertyChanged("IDProduct");
					this.OnIDProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDColor", DbType="Int")]
		public System.Nullable<int> IDColor
		{
			get
			{
				return this._IDColor;
			}
			set
			{
				if ((this._IDColor != value))
				{
					if (this._ColorProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDColorChanging(value);
					this.SendPropertyChanging();
					this._IDColor = value;
					this.SendPropertyChanged("IDColor");
					this.OnIDColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailOrder", Storage="_Product", ThisKey="IDProduct", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DetailOrders.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DetailOrders.Add(this);
						this._IDProduct = value.ProductID;
					}
					else
					{
						this._IDProduct = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorProduct_DetailOrder", Storage="_ColorProduct", ThisKey="IDColor", OtherKey="IDColor", IsForeignKey=true)]
		public ColorProduct ColorProduct
		{
			get
			{
				return this._ColorProduct.Entity;
			}
			set
			{
				ColorProduct previousValue = this._ColorProduct.Entity;
				if (((previousValue != value) 
							|| (this._ColorProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColorProduct.Entity = null;
						previousValue.DetailOrders.Remove(this);
					}
					this._ColorProduct.Entity = value;
					if ((value != null))
					{
						value.DetailOrders.Add(this);
						this._IDColor = value.IDColor;
					}
					else
					{
						this._IDColor = default(Nullable<int>);
					}
					this.SendPropertyChanged("ColorProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_DetailOrder", Storage="_Order", ThisKey="IDOrder", OtherKey="IDOrder", IsForeignKey=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.DetailOrders.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.DetailOrders.Add(this);
						this._IDOrder = value.IDOrder;
					}
					else
					{
						this._IDOrder = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColorProduct")]
	public partial class ColorProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDColor;
		
		private string _NameColor;
		
		private string _Description;
		
		private EntitySet<DetailOrder> _DetailOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDColorChanging(int value);
    partial void OnIDColorChanged();
    partial void OnNameColorChanging(string value);
    partial void OnNameColorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ColorProduct()
		{
			this._DetailOrders = new EntitySet<DetailOrder>(new Action<DetailOrder>(this.attach_DetailOrders), new Action<DetailOrder>(this.detach_DetailOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDColor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDColor
		{
			get
			{
				return this._IDColor;
			}
			set
			{
				if ((this._IDColor != value))
				{
					this.OnIDColorChanging(value);
					this.SendPropertyChanging();
					this._IDColor = value;
					this.SendPropertyChanged("IDColor");
					this.OnIDColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameColor", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameColor
		{
			get
			{
				return this._NameColor;
			}
			set
			{
				if ((this._NameColor != value))
				{
					this.OnNameColorChanging(value);
					this.SendPropertyChanging();
					this._NameColor = value;
					this.SendPropertyChanged("NameColor");
					this.OnNameColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorProduct_DetailOrder", Storage="_DetailOrders", ThisKey="IDColor", OtherKey="IDColor")]
		public EntitySet<DetailOrder> DetailOrders
		{
			get
			{
				return this._DetailOrders;
			}
			set
			{
				this._DetailOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.ColorProduct = this;
		}
		
		private void detach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.ColorProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStore;
		
		private string _NameStore;
		
		private System.Nullable<int> _IDZipCodeStore;
		
		private string _AddressStore;
		
		private EntityRef<ZipCode> _ZipCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStoreChanging(int value);
    partial void OnIDStoreChanged();
    partial void OnNameStoreChanging(string value);
    partial void OnNameStoreChanged();
    partial void OnIDZipCodeStoreChanging(System.Nullable<int> value);
    partial void OnIDZipCodeStoreChanged();
    partial void OnAddressStoreChanging(string value);
    partial void OnAddressStoreChanged();
    #endregion
		
		public Store()
		{
			this._ZipCode = default(EntityRef<ZipCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStore", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDStore
		{
			get
			{
				return this._IDStore;
			}
			set
			{
				if ((this._IDStore != value))
				{
					this.OnIDStoreChanging(value);
					this.SendPropertyChanging();
					this._IDStore = value;
					this.SendPropertyChanged("IDStore");
					this.OnIDStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStore", DbType="NVarChar(100)")]
		public string NameStore
		{
			get
			{
				return this._NameStore;
			}
			set
			{
				if ((this._NameStore != value))
				{
					this.OnNameStoreChanging(value);
					this.SendPropertyChanging();
					this._NameStore = value;
					this.SendPropertyChanged("NameStore");
					this.OnNameStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDZipCodeStore", DbType="Int")]
		public System.Nullable<int> IDZipCodeStore
		{
			get
			{
				return this._IDZipCodeStore;
			}
			set
			{
				if ((this._IDZipCodeStore != value))
				{
					if (this._ZipCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDZipCodeStoreChanging(value);
					this.SendPropertyChanging();
					this._IDZipCodeStore = value;
					this.SendPropertyChanged("IDZipCodeStore");
					this.OnIDZipCodeStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressStore", DbType="NVarChar(300)")]
		public string AddressStore
		{
			get
			{
				return this._AddressStore;
			}
			set
			{
				if ((this._AddressStore != value))
				{
					this.OnAddressStoreChanging(value);
					this.SendPropertyChanging();
					this._AddressStore = value;
					this.SendPropertyChanged("AddressStore");
					this.OnAddressStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Store", Storage="_ZipCode", ThisKey="IDZipCodeStore", OtherKey="IDZipCode", IsForeignKey=true)]
		public ZipCode ZipCode
		{
			get
			{
				return this._ZipCode.Entity;
			}
			set
			{
				ZipCode previousValue = this._ZipCode.Entity;
				if (((previousValue != value) 
							|| (this._ZipCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZipCode.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._ZipCode.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._IDZipCodeStore = value.IDZipCode;
					}
					else
					{
						this._IDZipCodeStore = default(Nullable<int>);
					}
					this.SendPropertyChanged("ZipCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDOrder;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<System.DateTime> _OrderedDate;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _DeliveredDate;
		
		private System.Nullable<decimal> _TotalMoney;
		
		private System.Nullable<int> _TotalAmount;
		
		private System.Nullable<int> _IDMember;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _FullName;
		
		private string _Notes;
		
		private System.Nullable<int> _IDZipCode;
		
		private System.Nullable<int> _IDShipper;
		
		private System.Nullable<bool> _ShopOrOnline;
		
		private System.Nullable<int> _IDStore;
		
		private EntitySet<DetailOrder> _DetailOrders;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Shipper> _Shipper;
		
		private EntityRef<StatusOrder> _StatusOrder;
		
		private EntityRef<ZipCode> _ZipCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOrderChanging(int value);
    partial void OnIDOrderChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnOrderedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderedDateChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnDeliveredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveredDateChanged();
    partial void OnTotalMoneyChanging(System.Nullable<decimal> value);
    partial void OnTotalMoneyChanged();
    partial void OnTotalAmountChanging(System.Nullable<int> value);
    partial void OnTotalAmountChanged();
    partial void OnIDMemberChanging(System.Nullable<int> value);
    partial void OnIDMemberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIDZipCodeChanging(System.Nullable<int> value);
    partial void OnIDZipCodeChanged();
    partial void OnIDShipperChanging(System.Nullable<int> value);
    partial void OnIDShipperChanged();
    partial void OnShopOrOnlineChanging(System.Nullable<bool> value);
    partial void OnShopOrOnlineChanged();
    partial void OnIDStoreChanging(System.Nullable<int> value);
    partial void OnIDStoreChanged();
    #endregion
		
		public Order()
		{
			this._DetailOrders = new EntitySet<DetailOrder>(new Action<DetailOrder>(this.attach_DetailOrders), new Action<DetailOrder>(this.detach_DetailOrders));
			this._Member = default(EntityRef<Member>);
			this._Shipper = default(EntityRef<Shipper>);
			this._StatusOrder = default(EntityRef<StatusOrder>);
			this._ZipCode = default(EntityRef<ZipCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDOrder
		{
			get
			{
				return this._IDOrder;
			}
			set
			{
				if ((this._IDOrder != value))
				{
					this.OnIDOrderChanging(value);
					this.SendPropertyChanging();
					this._IDOrder = value;
					this.SendPropertyChanged("IDOrder");
					this.OnIDOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._StatusOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderedDate
		{
			get
			{
				return this._OrderedDate;
			}
			set
			{
				if ((this._OrderedDate != value))
				{
					this.OnOrderedDateChanging(value);
					this.SendPropertyChanging();
					this._OrderedDate = value;
					this.SendPropertyChanged("OrderedDate");
					this.OnOrderedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveredDate
		{
			get
			{
				return this._DeliveredDate;
			}
			set
			{
				if ((this._DeliveredDate != value))
				{
					this.OnDeliveredDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveredDate = value;
					this.SendPropertyChanged("DeliveredDate");
					this.OnDeliveredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMoney", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalMoney
		{
			get
			{
				return this._TotalMoney;
			}
			set
			{
				if ((this._TotalMoney != value))
				{
					this.OnTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._TotalMoney = value;
					this.SendPropertyChanged("TotalMoney");
					this.OnTotalMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Int")]
		public System.Nullable<int> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMember", DbType="Int")]
		public System.Nullable<int> IDMember
		{
			get
			{
				return this._IDMember;
			}
			set
			{
				if ((this._IDMember != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMemberChanging(value);
					this.SendPropertyChanging();
					this._IDMember = value;
					this.SendPropertyChanged("IDMember");
					this.OnIDMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDZipCode", DbType="Int")]
		public System.Nullable<int> IDZipCode
		{
			get
			{
				return this._IDZipCode;
			}
			set
			{
				if ((this._IDZipCode != value))
				{
					if (this._ZipCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDZipCodeChanging(value);
					this.SendPropertyChanging();
					this._IDZipCode = value;
					this.SendPropertyChanged("IDZipCode");
					this.OnIDZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShipper", DbType="Int")]
		public System.Nullable<int> IDShipper
		{
			get
			{
				return this._IDShipper;
			}
			set
			{
				if ((this._IDShipper != value))
				{
					if (this._Shipper.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDShipperChanging(value);
					this.SendPropertyChanging();
					this._IDShipper = value;
					this.SendPropertyChanged("IDShipper");
					this.OnIDShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOrOnline", DbType="Bit")]
		public System.Nullable<bool> ShopOrOnline
		{
			get
			{
				return this._ShopOrOnline;
			}
			set
			{
				if ((this._ShopOrOnline != value))
				{
					this.OnShopOrOnlineChanging(value);
					this.SendPropertyChanging();
					this._ShopOrOnline = value;
					this.SendPropertyChanged("ShopOrOnline");
					this.OnShopOrOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStore", DbType="Int")]
		public System.Nullable<int> IDStore
		{
			get
			{
				return this._IDStore;
			}
			set
			{
				if ((this._IDStore != value))
				{
					this.OnIDStoreChanging(value);
					this.SendPropertyChanging();
					this._IDStore = value;
					this.SendPropertyChanged("IDStore");
					this.OnIDStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_DetailOrder", Storage="_DetailOrders", ThisKey="IDOrder", OtherKey="IDOrder")]
		public EntitySet<DetailOrder> DetailOrders
		{
			get
			{
				return this._DetailOrders;
			}
			set
			{
				this._DetailOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Order", Storage="_Member", ThisKey="IDMember", OtherKey="IDMember", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._IDMember = value.IDMember;
					}
					else
					{
						this._IDMember = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipper_Order", Storage="_Shipper", ThisKey="IDShipper", OtherKey="IDShipper", IsForeignKey=true)]
		public Shipper Shipper
		{
			get
			{
				return this._Shipper.Entity;
			}
			set
			{
				Shipper previousValue = this._Shipper.Entity;
				if (((previousValue != value) 
							|| (this._Shipper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipper.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Shipper.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._IDShipper = value.IDShipper;
					}
					else
					{
						this._IDShipper = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shipper");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusOrder_Order", Storage="_StatusOrder", ThisKey="Status", OtherKey="ID", IsForeignKey=true)]
		public StatusOrder StatusOrder
		{
			get
			{
				return this._StatusOrder.Entity;
			}
			set
			{
				StatusOrder previousValue = this._StatusOrder.Entity;
				if (((previousValue != value) 
							|| (this._StatusOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusOrder.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._StatusOrder.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Status = value.ID;
					}
					else
					{
						this._Status = default(Nullable<byte>);
					}
					this.SendPropertyChanged("StatusOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZipCode_Order", Storage="_ZipCode", ThisKey="IDZipCode", OtherKey="IDZipCode", IsForeignKey=true)]
		public ZipCode ZipCode
		{
			get
			{
				return this._ZipCode.Entity;
			}
			set
			{
				ZipCode previousValue = this._ZipCode.Entity;
				if (((previousValue != value) 
							|| (this._ZipCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZipCode.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._ZipCode.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._IDZipCode = value.IDZipCode;
					}
					else
					{
						this._IDZipCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("ZipCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_DetailOrders(DetailOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
}
#pragma warning restore 1591
